[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\dafonser\AppData\Local\Temp\idea27470.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\dafonser\AppData\Local\Temp\idea27470.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.5.8 (Oracle Corporation Java 11.0.14)
[debug]       Load.loadUnit: plugins took 62.8535ms
[debug]       Load.loadUnit: defsScala took 0.223ms
[debug] [Loading] Scanning directory C:\Users\dafonser\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\dafonser\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 10.5959 ms
[debug]           Load.resolveProject(global-plugins) took 34.6809ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\dafonser\.sbt\1.0\plugins, plugins: List(<none>))) took 64.7922ms
[debug] [Loading] Done in C:\Users\dafonser\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 79.7461ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1802ms
[debug]     Load.loadUnit(file:/C:/Users/dafonser/.sbt/1.0/plugins/, ...) took 150.0666ms
[debug]   Load.apply: load took 301.4682ms
[debug]   Load.apply: resolveProjects took 5.0253ms
[debug]   Load.apply: finalTransforms took 45.3838ms
[debug]   Load.apply: config.delegates took 6.2945ms
[debug]   Load.apply: Def.make(settings)... took 268.7702ms
[debug]   Load.apply: structureIndex took 81.6994ms
[debug]   Load.apply: mkStreams took 1.8454ms
[info] loading global plugins from C:\Users\dafonser\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 1818.3361ms
[debug]           Load.loadUnit: plugins took 17.6226ms
[debug]           Load.loadUnit: defsScala took 0.0034ms
[debug] [Loading] Scanning directory C:\Users\dafonser\source\service\untitled1\project
[debug]             Load.loadUnit: mkEval took 5.9507ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\dafonser\source\service\untitled1\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.2587 ms
[info] loading settings for project untitled1-build from idea27470.sbt ...
[debug]               Load.resolveProject(untitled1-build) took 1.9358ms
[debug]             Load.loadTransitive: finalizeProject(Project(id untitled1-build, base: C:\Users\dafonser\source\service\untitled1\project, plugins: List(<none>))) took 3.5529ms
[debug] [Loading] Done in C:\Users\dafonser\source\service\untitled1\project, returning: (untitled1-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 99.101ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.6934ms
[debug]         Load.loadUnit(file:/C:/Users/dafonser/source/service/untitled1/project/, ...) took 121.5857ms
[debug]       Load.apply: load took 122.5248ms
[debug]       Load.apply: resolveProjects took 0.0984ms
[debug]       Load.apply: finalTransforms took 5.6546ms
[debug]       Load.apply: config.delegates took 0.2788ms
[debug]       Load.apply: Def.make(settings)... took 69.7081ms
[debug]       Load.apply: structureIndex took 21.1866ms
[debug]       Load.apply: mkStreams took 0.0032ms
[info] loading project definition from C:\Users\dafonser\source\service\untitled1\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 409.3486ms
[debug]     Load.loadUnit: defsScala took 0.0047ms
[debug] [Loading] Scanning directory C:\Users\dafonser\source\service\untitled1
[debug]       Load.loadUnit: mkEval took 0.6499ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.676 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 22.0799ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\dafonser\source\service\untitled1, plugins: List(<none>))) took 25.4078ms
[debug] [Loading] Done in C:\Users\dafonser\source\service\untitled1, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 88.0863ms
[debug]     Load.loadUnit: cleanEvalClasses took 6.1996ms
[debug]   Load.loadUnit(file:/C:/Users/dafonser/source/service/untitled1/, ...) took 504.2724ms
[debug] Load.apply: load took 505.6508ms
[debug] Load.apply: resolveProjects took 0.0929ms
[debug] Load.apply: finalTransforms took 19.0052ms
[debug] Load.apply: config.delegates took 0.3552ms
[debug] Load.apply: Def.make(settings)... took 71.3209ms
[debug] Load.apply: structureIndex took 21.2914ms
[debug] Load.apply: mkStreams took 0.0034ms
[info] set current project to untitled1 (in build file:/C:/Users/dafonser/source/service/untitled1/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 55144 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 55144, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to untitled1 (in build file:/C:/Users/dafonser/source/service/untitled1/)
[debug] > Exec(idea-shell, None, None)
